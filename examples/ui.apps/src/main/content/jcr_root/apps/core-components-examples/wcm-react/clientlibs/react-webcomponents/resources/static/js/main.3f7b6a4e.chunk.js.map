{"version":3,"sources":["../RoutedLink.tsx","../node_modules/react-universal-component/dist/requireById sync /^.*$","utils/MetaUtils.ts","button/v1/index.tsx","utils/withAsyncImport.tsx","breadcrumb/v2/index.tsx"],"names":["i","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MetaUtils","window","getMetaPropertyValue","this","getWcmMode","propertyName","isBrowser","meta","document","head","querySelector","content","ButtonModel","isInEditor","hidePlaceHolder","DOMModel","byAttrVal","ReactButton","event","console","log","props","handleOnClick","Component","ButtonCustomElement","createCustomElement","customElements","define","ErrorMessage","FallbackComponent","matchProps","withProps","className","style","height","skeletonHeight","withAsyncImport","asyncImport","loadingComponent","universal","loading","error","ignoreBabelRename","BreadCrumbItemModel","byBooleanAttrVal","BreadCrumbModel","byChildrenRefArray","ReactBreadCrumb","BreadCrumbV2","items","ariaLabelI18n"],"mappings":";wJAAA,E,gDAAA,E,uCAgBO,SAAW,EAAQ,GAShB,GAAG,EAAe,GAEnB,OAAK,EAAoB,GAAS,QAKjC,MAAa,EAAe,GAAS,CAEpCA,EAAA,EACF,KAIA,Y,u3HCvCT,IAAIC,EAAM,CACT,IAAK,GACL,KAAM,GACN,UAAW,GACX,aAAc,IAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,oICTCY,E,8FAQjB,WACI,IACI,MAAyB,qBAAXC,OAChB,MAAOT,GACL,OAAO,K,wBAIf,WACI,OAAOQ,EAAUE,qBAAqB,gB,wBAG1C,WACI,MAA6B,SAAtBC,KAAKC,e,kCAShB,SAA4BC,GACxB,GAAIF,KAAKG,YAAa,CAClB,IAAMC,EAAOC,SAASC,KAAKC,cAAc,kBAAoBL,EAAe,MAE5E,OAAOE,GAAQA,EAAKI,a,sBCzB1BC,G,oUAIFC,WAAab,EAAUa,a,EACvBC,iBAAkB,E,YALIC,Y,kCACrBC,a,gGACAA,a,gGACAA,a,iEAKCC,E,mKAEF,SAAcC,GACVC,QAAQC,IAAI,QAASF,K,oBAGzB,WACI,OAEI,kBAAC,IAAD,iBAAcf,KAAKkB,MAAnB,CACIC,cAAenB,KAAKmB,qB,GAVVC,aAepBC,EAAsBC,8BAAoBR,EAAaL,EAAa,WAE1EX,OAAOyB,eAAeC,OAAO,cAAeH,G,yCCvBtCI,EAAe,WACjB,OACI,uDAQFC,EAhBY,SAACN,EAAeF,GAC9B,OAAO,SAAUS,GACb,OAAO,kBAACP,EAAD,iBAAeF,EAAWS,KAcfC,EAJK,SAACV,GAAD,OAC3B,yBAAKW,UAAU,2CAA2CC,MAAO,CAACC,OAAQb,EAAMc,eAAiBd,EAAMc,eAAiB,YAGhE,CAACA,eAAgB,MAW9DC,EARgB,SAACC,GAAD,IACCC,EADD,uDACoBT,EADpB,OAE3BU,IAAUF,EAAa,CACnBG,QAASF,EACTG,MAAOb,EACPc,mBAAmB,KCpBrBC,G,EACDC,6B,EACA5B,sB,EACAA,sB,gVAH6BD,Y,gHACQ,K,4GACX,M,8GACE,M,GAG3B8B,G,EACDC,6BAAmB,sBAAuBH,G,iQADjB5B,Y,8GACqE,M,GAI7FgC,E,4JACF,WAEI,IAAMC,EAAeZ,GAAgB,kBAAM,oCAC3C,OACI,kBAACY,EAAD,CACInC,WAAYb,EAAUa,aACtBoC,MAAO9C,KAAKkB,MAAM4B,MAClBC,cAAe,mB,GARD3B,aAexBC,EAAsBC,8BAAoBsB,EAAiBF,EAAiB,aAElF5C,OAAOyB,eAAeC,OAAO,kBAAmBH,K","file":"static/js/main.3f7b6a4e.chunk.js","sourcesContent":["/*\n *  Copyright 2020 Adobe\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\n\nexport interface LinkProps {\n    to?: string;\n    isRouted?: boolean;\n    [prop: string]: any\n}\nexport const RoutedLink = (props:LinkProps) => {\n    const {to, isRouted, ...otherProps} = props;\n\n    if(to === undefined || to.trim().length === 0){\n        return <a href={'#'}\n            {...otherProps}\n        />;\n    }\n    const isExternal = /^https?:\\/\\//.test(to);\n\n    return isExternal || !isRouted?\n        (<a\n            href={to}\n            {...otherProps}\n        />)\n        :\n        ( <RouterLink {...otherProps}\n                      to={to}\n        />)\n};","var map = {\n\t\".\": 11,\n\t\"./\": 11,\n\t\"./index\": 11,\n\t\"./index.js\": 11\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46;","/*\n *  Copyright 2020 Adobe\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nexport default class MetaUtils {\n\n    /**\n     * Returns if the code executes in the browser context or not by checking for the\n     * existance of the window object\n     *\n     * @returns {Boolean} the result of the check of the existance of the window object\n     */\n    static isBrowser():boolean {\n        try {\n            return typeof window !== 'undefined';\n        } catch (e) {\n            return false;\n        }\n    }\n\n    static getWcmMode():string {\n        return MetaUtils.getMetaPropertyValue('cq:wcmmode');\n    }\n\n    static isInEditor():boolean{\n        return this.getWcmMode() === 'edit';\n    }\n\n    /**\n     * Returns the value of the meta property with the given key\n     *\n     * @param {string} propertyName  - name of the meta property\n     * @return {string|undefined}\n     */\n    static getMetaPropertyValue(propertyName:string):any {\n        if (this.isBrowser()) {\n            const meta = document.head.querySelector('meta[property=\"' + propertyName + '\"]');\n            // @ts-ignore\n            return meta && meta.content;\n        }\n    }\n\n}","/*\n *  Copyright 2020 Adobe\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport React, { MouseEvent, Component } from 'react';\nimport {ButtonV1Model} from \"@adobe/aem-core-components-react-base/dist/authoring/button/v1/ButtonV1\";\n// @ts-ignore\nimport { createCustomElement, DOMModel, byChildContentVal, byAttrVal, registerEvent } from \"@adobe/react-webcomponent\";\nimport MetaUtils from '../../utils/MetaUtils';\nimport ButtonV1 from '@adobe/aem-core-components-react-base/dist/authoring/button/v1/ButtonV1';\n\n\n\nclass ButtonModel extends DOMModel implements ButtonV1Model{\n    @byAttrVal text?: string;\n    @byAttrVal link?: string;\n    @byAttrVal icon?: string;\n    isInEditor = MetaUtils.isInEditor();\n    hidePlaceHolder = false;\n}\n\nclass ReactButton extends Component<ButtonModel> {\n\n    handleOnClick(event:MouseEvent){\n        console.log(\"event\", event);\n    }\n\n    render() {\n        return (\n\n            <ButtonV1 {...this.props}\n                handleOnClick={this.handleOnClick}\n            />\n        )\n    }\n}\nconst ButtonCustomElement = createCustomElement(ReactButton, ButtonModel, \"element\");\n// @ts-ignore\nwindow.customElements.define(\"core-button\", ButtonCustomElement);","/*\n *  Copyright 2020 Adobe\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport React from 'react';\n\nimport universal from 'react-universal-component';\n\nconst withProps = (Component:any, props:any) => {\n    return function (matchProps:any) {\n        return <Component {...props} {...matchProps} />\n    }\n};\n\nconst ErrorMessage = () => {\n    return (\n        <div>Error loading chunks!</div>\n    )\n};\n\nconst ComponentBlockSkeleton = (props:any) => (\n    <div className=\"loading-skeleton loading-skeleton__block\" style={{height: props.skeletonHeight ? props.skeletonHeight : '50px'}}/>\n);\n\nconst FallbackComponent = withProps(ComponentBlockSkeleton, {skeletonHeight: 1000});\n\n\nexport const withAsyncImport = (asyncImport:any,\n                                loadingComponent = FallbackComponent) =>\n    universal(asyncImport, {\n        loading: loadingComponent,\n        error: ErrorMessage,\n        ignoreBabelRename: false\n    });\n\nexport default withAsyncImport;\n","/*\n *  Copyright 2020 Adobe\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport React, { MouseEvent, Component } from 'react';\nimport {BreadCrumbV2ItemModel} from \"@adobe/aem-core-components-react-base/dist/layout/breadcrumb/v2/BreadCrumbV2\";\n\n// @ts-ignore\nimport { createCustomElement, DOMModel, byChildrenRefArray, byBooleanAttrVal, byAttrVal, registerEvent } from \"@adobe/react-webcomponent\";\nimport MetaUtils from '../../utils/MetaUtils';\nimport withAsyncImport from \"../../utils/withAsyncImport\";\n\n\nclass BreadCrumbItemModel extends DOMModel implements BreadCrumbV2ItemModel{\n    @byBooleanAttrVal() active: boolean = false\n    @byAttrVal() url: string = \"\"\n    @byAttrVal() title: string = \"\"\n}\n\nclass BreadCrumbModel extends DOMModel{\n    @byChildrenRefArray(\"div.breadcrumb-item\", BreadCrumbItemModel) items: BreadCrumbItemModel[] = [];\n\n}\n\nclass ReactBreadCrumb extends Component<BreadCrumbModel> {\n    render() {\n\n        const BreadCrumbV2 = withAsyncImport(() => import(/* webpackChunkName: \"BreadCrumbV2\" */ '@adobe/aem-core-components-react-base/dist/layout/breadcrumb/v2/BreadCrumbV2'));\n        return (\n            <BreadCrumbV2\n                isInEditor={MetaUtils.isInEditor()}\n                items={this.props.items}\n                ariaLabelI18n={'BreadCrumb'}\n            />\n        )\n    }\n}\n\n\nconst ButtonCustomElement = createCustomElement(ReactBreadCrumb, BreadCrumbModel, \"container\");\n// @ts-ignore\nwindow.customElements.define(\"core-breadcrumb\", ButtonCustomElement);"],"sourceRoot":""}